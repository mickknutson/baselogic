<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.baselogic</groupId>
    <artifactId>jax-rs-demo</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <packaging>war</packaging>

    <parent>
        <groupId>com.baselogic</groupId>
        <artifactId>baselogic</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <name>${project.artifactId}</name>
    <description>JAX-RS Demo with Jersey.</description>


    <!--====================================================================-->
    <!-- PROPERTIES -->
    <!--====================================================================-->
    <properties>
        <jetty.scanIntervalSeconds>30</jetty.scanIntervalSeconds>

        <junit.enableAssertions>true</junit.enableAssertions>
        <junit.failIfNoTests>false</junit.failIfNoTests>
        <junit.forkCount>50</junit.forkCount>
        <junit.reuseForks>true</junit.reuseForks>
        <junit.useSystemClassLoader>true</junit.useSystemClassLoader>

    </properties>

    <build>

        <finalName>${project.artifactId}</finalName>

        <!--================================================================-->
        <!-- PLUGINS -->
        <!--================================================================-->
        <plugins>

            <!--
            http://maven.apache.org/plugins/maven-war-plugin/
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven.war.plugin}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>

                    <filters>
                        <!--<filter>${filterProperties}</filter>-->
                    </filters>
                    <nonFilteredFileExtensions>
                        <!-- default value contains jpg,jpeg,gif,bmp,png -->
                        <nonFilteredFileExtension>pdf,jpg,jpeg,gif,bmp,png</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>

                    <webResources>
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>src/main/resources</directory>
                        </resource>

                    </webResources>
                </configuration>
            </plugin>

            <!--
            http://tomcat.apache.org/maven-plugin-2.0/tomcat7-maven-plugin/

            To remote debug, execute this command first:
            ============================================
            mvnDebug clean tomcat7:run-war -P debug -e
            (this opens port 8000 as the debug port)


            To add more memory to run Tomcat:
            =================================
            (Linux) export JAVA_OPTS="-Xmx512m -XX:MaxPermSize=512m"
            (Windows) set JAVA_OPTS="-Xmx512m -XX:MaxPermSize=512m"


            mvn clean tomcat7:run-war -P trace -e
            mvn clean tomcat7:run-war -P debug -e
            mvn clean tomcat7:run-war -P qa -e

            To start:
            http://localhost:8080/eivr/devStart/devStart.vxml
            -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
            </plugin>


            <!--UNIT TESTS: -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <!-- FUNCTIONAL TESTS -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin}</version>
            </plugin>

        </plugins>

    </build>

    <!--====================================================================-->
    <!-- DEPENDENCIES -->
    <!-- TO see dependency tree: 'mvn dependency:tree' -->
    <!--====================================================================-->
    <dependencies>

        <dependency>
            <groupId>com.baselogic</groupId>
            <artifactId>common</artifactId>
        </dependency>

        <!--================================================================-->
        <!-- Need to use Servlet 3.0, so added Tomcat
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>-->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>



        <!-- Servlet API 3.0 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${javax.servlet.jstl.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--<dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>${javax.cdi.version}</version>
        </dependency>-->

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>

        <!--================================================================-->
        <!-- Commons -->
        <!-- Use the org.apache.commons (newer) versions when possible.
             The new org.apache.commons versions sometimes beak other dependencies though.
        -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>


        <!-- JAX-RS Stuff -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>${jaxrs.version}</version>
        </dependency>

        <!-- Verify, there might be duplicate versions -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${jaxb.version}</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jersey.version}</version>
        </dependency>


        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-processing</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-sse</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <!-- if you are using Jersey client specific features -->
        <!--
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        -->


        <!-- WINK for server and client usage -->
        <!-- Another option is Jackson or Jettison -->
        <dependency>
            <groupId>org.apache.wink</groupId>
            <artifactId>wink-client</artifactId>
            <version>${wink.version}</version>
            <exclusions>
                <!--<exclusion>
                    <groupId>org.apache.geronimo.specs</groupId>
                    <artifactId>geronimo-annotation_1.1_spec</artifactId>
                </exclusion>-->
                <exclusion>
                    <groupId>org.apache.geronimo.specs</groupId>
                    <artifactId>geronimo-jaxrs_1.1_spec</artifactId>
                </exclusion>

            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.wink</groupId>
            <artifactId>wink-server</artifactId>
            <version>${wink.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.geronimo.specs</groupId>
                    <artifactId>geronimo-jaxrs_1.1_spec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.wink</groupId>
            <artifactId>wink-json4j</artifactId>
            <version>${wink.version}</version>
        </dependency>






        <!-- JSON parser -->
        <!--<dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>
        -->



        <!--================================================================-->
        <!-- Testing -->

        <!--<dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-chrome-driver</artifactId>
            <version>2.47.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-firefox-driver</artifactId>
            <version>2.47.1</version>
            <scope>test</scope>
        </dependency>-->


    </dependencies>


    <!--================================================================-->
    <!-- REPOSITORIES -->
    <!--================================================================-->



    <!--================================================================-->
    <!-- PROFILES -->
    <!--
        mvn tomcat7:run -e -P embedded
        mvn tomcat7:run -e -P dev-local
        mvn tomcat7:run -e -P dev

        mvn verify -P integration
    -->
    <!--================================================================-->
    <profiles>

        <profile>
            <id>embedded</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <loggingConfig>configurations/profiles/embedded/logback.xml</loggingConfig>

                <activeSpringProfile>embedded</activeSpringProfile>
                <vaadinProductionMode>false</vaadinProductionMode>
            </properties>

            <build>
                <!--<filters>
                    <filter>configurations/properties/embedded-filter.properties</filter>
                </filters>-->
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>

                <plugins>
                </plugins>
            </build>

            <repositories>
                <repository>
                    <id>central</id>
                    <name>Maven Repository Switchboard</name>
                    <layout>default</layout>
                    <url>http://repo1.maven.org/maven2</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>


                <!--<repository>
                    <id>eclipselink</id>
                    <url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
                </repository>-->


                <!-- JBoss repo only needed for Spring Security Dependency
                of com.sun.xml.wsit:xws-security:jar:1.3.1 -->
                <repository>
                    <id>jboss.repository.releases.public</id>
                    <name>JBoss Repo Public</name>
                    <url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
                    <!--<url>https://repository.jboss.org/nexus/content/groups/public/</url>-->
                </repository>

            </repositories>

            <pluginRepositories>
                <pluginRepository>
                    <id>apache.public</id>
                    <name>Apache public</name>
                    <url>https://repository.apache.org/content/groups/public</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>

                <pluginRepository>
                    <id>apache.snapshots</id>
                    <name>Apache Snapshots</name>
                    <url>http://repository.apache.org/content/groups/snapshots-group/</url>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </pluginRepository>

                <!--<pluginRepository>
                    <id>codehaus-snapshots</id>
                    <url>http://nexus.codehaus.org/snapshots</url>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                </pluginRepository>-->

            </pluginRepositories>

        </profile>


        <!-- mvn install -p=dev-local -->
        <profile>
            <id>dev-local</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <properties>
                <activeSpringProfile>dev</activeSpringProfile>
                <vaadinProductionMode>false</vaadinProductionMode>
            </properties>

            <build>
                <plugins>
                </plugins>
            </build>

            <repositories>
                <repository>
                    <id>central</id>
                    <name>Maven Repository Switchboard</name>
                    <layout>default</layout>
                    <url>http://repo1.maven.org/maven2</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>

                <repository>
                    <id>eclipselink</id>
                    <url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
                </repository>

                <repository>
                    <id>jboss</id>
                    <url>https://repository.jboss.org/nexus/content/groups/public/</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>

            </repositories>

            <pluginRepositories>
                <pluginRepository>
                    <id>apache.public</id>
                    <name>Apache public</name>
                    <url>https://repository.apache.org/content/groups/public</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>

                <pluginRepository>
                    <id>apache.snapshots</id>
                    <name>Apache Snapshots</name>
                    <url>http://repository.apache.org/content/groups/snapshots-group/</url>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </pluginRepository>

            </pluginRepositories>
        </profile>

    </profiles>

    <!--================================================================-->

</project>
